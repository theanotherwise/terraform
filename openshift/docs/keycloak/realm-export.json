{
  "id": "linuxpolska",
  "realm": "linuxpolska",
  "displayName": "Linux Polska Sp. z o. o.",
  "displayNameHtml": "Linux Polska Sp. z o. o.",
  "notBefore": 0,
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "ee0b54f6-4e2b-443f-9b26-50eb207e3e61",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "linuxpolska",
        "attributes": {}
      },
      {
        "id": "3a09c8ac-1426-408e-be6c-64e96a26a513",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "linuxpolska",
        "attributes": {}
      }
    ],
    "client": {
      "gamma.seems.legal": [],
      "realm-management": [
        {
          "id": "ceae01cc-e956-44db-82d6-70e1bd24ce82",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "434a8e94-03ae-4f84-be14-9cb4abbd2b83",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "cf052534-d523-46b0-b926-d041d1ce0707",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "9899f9fc-2426-4263-85cc-eab29424ba96",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "667380ac-e1cb-42ab-ba96-e18a5e46d809",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "a3e3ab30-b041-4316-aaa6-c942f2db2659",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "2b79b2e1-e155-45c5-bd1b-6f76af404d8e",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "0a1c8e14-65e4-4098-9525-a7efef01edd9",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "b9519510-e0d2-4f60-9daf-ada9ec9bed58",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "a65bf295-5574-4da5-ae99-a12e638bc60f",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "1e688987-0ba6-48eb-a285-ddfb2d6211a3",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "23114067-e3d4-4f10-9276-f69f38ae5875",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "09b09ec5-4383-48d1-956c-3c830e706408",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "48ef4135-144c-43e1-bfaa-e38359092256",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "e2906b2f-a07f-4e42-877b-28ea4d9fe76d",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "3ecc83ff-c153-4da4-aebe-fe208c5c78b1",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-authorization",
                "view-events",
                "query-clients",
                "manage-events",
                "manage-users",
                "create-client",
                "manage-authorization",
                "view-clients",
                "manage-realm",
                "view-users",
                "manage-identity-providers",
                "query-groups",
                "query-realms",
                "view-identity-providers",
                "manage-clients",
                "query-users",
                "impersonation",
                "view-realm"
              ]
            }
          },
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "1a32ac5b-1e6e-4725-80a9-5e098e41541c",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "fb80a4f1-770b-4174-b5ed-fb079a73f587",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        },
        {
          "id": "509ef5fe-7a38-43d6-8ab5-d3e53407d21d",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "48b4f0c2-b294-496d-8508-27c00a278335",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "00336346-cee8-4326-979d-924559bf1b28",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "047f58b0-308a-4730-8b9b-5c8546ea1f83",
          "attributes": {}
        }
      ],
      "beta.seems.legal": [],
      "account": [
        {
          "id": "472dbfc3-3c8c-4355-b2c7-74b68b6ffd0c",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "94d37ce3-d397-49e3-929d-611630aa9912",
          "attributes": {}
        },
        {
          "id": "35f02f61-5d27-46bf-96c9-fe390465e2a8",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "94d37ce3-d397-49e3-929d-611630aa9912",
          "attributes": {}
        },
        {
          "id": "d437db3e-55ef-4b4b-9982-27c5101d1f59",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "94d37ce3-d397-49e3-929d-611630aa9912",
          "attributes": {}
        },
        {
          "id": "e91ca202-f839-4064-86b0-38fb5eac145e",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "94d37ce3-d397-49e3-929d-611630aa9912",
          "attributes": {}
        },
        {
          "id": "aa1ada0a-dd71-4088-9410-14300414e258",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "94d37ce3-d397-49e3-929d-611630aa9912",
          "attributes": {}
        },
        {
          "id": "28ee3747-0854-47ce-b6a9-919a5acbb66a",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "94d37ce3-d397-49e3-929d-611630aa9912",
          "attributes": {}
        }
      ],
      "1git0.localdomain": []
    }
  },
  "groups": [
    {
      "id": "3b948bd3-ddcc-4d73-866a-722ac914c402",
      "name": "sonar-administrators",
      "path": "/sonar-administrators",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "1de8ff99-ae9e-4a30-9e39-61aa1b32eb4c",
      "name": "sonar-users",
      "path": "/sonar-users",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "defaultRoles": [
    "uma_authorization",
    "offline_access"
  ],
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "1d9aefee-8b0a-434a-9dd8-e70dc20070cd",
      "clientId": "1git0.localdomain",
      "name": "1git0.localdomain",
      "description": "1git0.localdomain",
      "rootUrl": "https://1git0.localdomain",
      "adminUrl": "https://1git0.localdomain/users/auth/saml/callback",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://1git0.localdomain/users/auth/saml/callback"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.assertion.signature": "true",
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "keycloak",
        "saml.server.signature": "true",
        "saml_idp_initiated_sso_url_name": "1git0.localdomain",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.signing.certificate": "MIICsTCCAZkCBgFzpoJvnDANBgkqhkiG9w0BAQsFADAcMRowGAYDVQQDDBExZ2l0MC5sb2NhbGRvbWFpbjAeFw0yMDA3MzEyMDEyMTJaFw0zMDA3MzEyMDEzNTJaMBwxGjAYBgNVBAMMETFnaXQwLmxvY2FsZG9tYWluMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAj1wMpAFnMmlzlBqPbGB+l/5GYVwYIdMP5bNd5whOeY3yhvfAh44evo1aZRTiAUiawB4H/58rJDuYrQMCY/qdM2/MRzLOyrJpxoX0H+uuztB0xWS85WaJwpxwR9CHOY+Cq+SPuk7XayTI4wp+tmfzVz1udLczDGifILXOpgnxgCU5wTh+BILIvdkIMj1VWXpt+xbUaWELduXr3lYyVZl4snv1NSLywgopD9VHEH/RcRIqVFUKOAV5mBVU8CRUFNMMKnLKHh4UvVr396M0Hsg/u1l+Fqi0x1fFwkYfmHx81Fm+frrfeASnhVHjNpkvsZG+ZrOEn+ZAbNGpdBu9yRyOFQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB1t3+j4DShbrXS6DyJDCHTf54xJPet+5SD2TRU5KMDd2MBn07wDd3WikzyOGZN/P6qpJUOhUPa4kQo/jQ2yqzbRYzz9RDdAVseGR65RtEy/Ql+O4LBzh7DwRVRehzlpM+4oWi5PYd/S7HxDtUiXVQ87P0N7GtX0tn+R1cozAiU62FXq8bCzU9O+RSfU7RwYCtRLEDU5E/+eteVtIWK4b2+R3R+21i/VBnUb8OdvuSzZ3O3yAvGSYOJCJmBGmYscYgWfshFonAYUeNfp2Of/ZuE+k16kybdrCAUR6FFPrG+Qlt6b/Tybwv5g943XWBeqRlzSDZBGIpg3G3/yyZYm78c",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "true",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml.signing.private.key": "MIIEpQIBAAKCAQEAj1wMpAFnMmlzlBqPbGB+l/5GYVwYIdMP5bNd5whOeY3yhvfAh44evo1aZRTiAUiawB4H/58rJDuYrQMCY/qdM2/MRzLOyrJpxoX0H+uuztB0xWS85WaJwpxwR9CHOY+Cq+SPuk7XayTI4wp+tmfzVz1udLczDGifILXOpgnxgCU5wTh+BILIvdkIMj1VWXpt+xbUaWELduXr3lYyVZl4snv1NSLywgopD9VHEH/RcRIqVFUKOAV5mBVU8CRUFNMMKnLKHh4UvVr396M0Hsg/u1l+Fqi0x1fFwkYfmHx81Fm+frrfeASnhVHjNpkvsZG+ZrOEn+ZAbNGpdBu9yRyOFQIDAQABAoIBAQCD6Z94ChJ7QK0pSodOojvagA8i5ysNdLjcFAAD5pDPKN5RcweltBB2JntXJ7AOnlBHF1sky8FWxb/m8y3v8VtVSTofCZFe0myiUAAinytrAkVwnRFzxLZebLSkYC0Nug/zO41FUebGoEJ5J98Q2PYBAHXyz+AZOuuxnZlZDy05S6Ve93YSBxL8Hpka3q0tLUITgY+FeGNqVuBDMzzmL/mQvlFApwqnP5p8G8oQIfwktw8pYKXvPsH2TgsdcINkxcJ846S5e+hPCiLV5svbzRy3DCLzg+D8iLwCiBj5VQMIIh/GiFpUygJKSRS3iN0Zo++FABWY3pNq1Saiw4qT6+YBAoGBANOIFjgI8e2IurbpkTlWjBb5xUT73XLUyUyKrhTj51QJS2oKOSxMCUf3GBPoFn80p+lN8VrRmezjT63JB+z+vH0Hd9hJyk1bhG/k5jMp3AlC2wqG/ZtqiUElM5zrjHJpgSs5iqn4RWVrf/kqKSv4iUovklacKOYaERfQlucUyGmtAoGBAK1/LOpzZK9zqxlGiJ6k4ccBkykbS1GTIAqaAnOZCUnygzJlsunsfBVY5jLnSl1HZ6gPw3V2bg7BnAKp4V/dMrdV5WgG2+NR3afK+KHaqqGigBtmNOUPeDhbTk0lgjm0HM3IYVA0ZxCRLfQZN56B8YZy1c8FWiI/Sj3bTtoAPRMJAoGBAMOh0YLDaxPW52/xNdlEnM1G9NXm5hikiQNcIsG5QSFscy3ABL5eGBtRgBgxBlVhGoXgCv6GaQg39mHwUX8y3Jn5hTIolIvUvvhJR0k8Rn7eMPxcekH5VrVENabEBiFuSAL09bRao7u3nySOhINhGX/d3UZyqDSfGP3gcR+IDg4FAoGBAJ50a0JJV6jCfH7eI4K41hfaQVwmuHhtZbMpC5omKAyod9h8d5YbzQv2IHBXO1zMDUi59Or/2e6SNvlbzCGwtVQqGBYVRZhsuYM45jF0s6hh8JyVkTOvGD5obbAZ1MD81d2/59jHs2W3IoAw09JpnXwMv2eO3M4wfY7XEEIcO6t5AoGAUJniVqjxIh6lQQoTIOd+XcWAxfX+xMKh9fUZVb4WzZQ9jplnqQXfQxxqmKVhlXXTuLBLySwTrdjLtpNoetU0fXdZrvdRJUEg/JTfqcX2LDT1MVaQyxXjNJ7nSyg/kDfRm2coBDVSvOmqVosZgRcEhBCF5E6gaYcVdkaaNulHvlc=",
        "saml_name_id_format": "persistent",
        "saml.onetimeuse.condition": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "c8ef8ad5-280b-4127-898e-9b7bd384b094",
          "name": "last_name",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "LastName",
            "friendly.name": "Last Name",
            "attribute.name": "last_name"
          }
        },
        {
          "id": "c263ad98-5d51-4786-8d13-d29257bfcade",
          "name": "name",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "Username",
            "friendly.name": "Username",
            "attribute.name": "name"
          }
        },
        {
          "id": "f45e8216-93ba-4374-8381-ba239164b276",
          "name": "first_name",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "FirstName",
            "friendly.name": "First Name",
            "attribute.name": "first_name"
          }
        },
        {
          "id": "8ab45e7b-2892-4a84-a4c7-f4ecff90a7f9",
          "name": "email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "Email",
            "friendly.name": "Email",
            "attribute.name": "email"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "94d37ce3-d397-49e3-929d-611630aa9912",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/linuxpolska/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "defaultRoles": [
        "manage-account",
        "view-profile"
      ],
      "redirectUris": [
        "/realms/linuxpolska/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dff71e05-315f-4799-ace4-40b3ffcc9f28",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/linuxpolska/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/realms/linuxpolska/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "84b4261f-ce1c-4f16-9e37-7834ae9e5fff",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9a0c2064-4f8b-42cb-8ffd-452cbf670f6a",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7d06a78a-0532-460f-893a-8533bb9f3783",
      "clientId": "beta.seems.legal",
      "name": "beta.seems.legal",
      "description": "beta.seems.legal",
      "rootUrl": "https://beta.seems.legal",
      "adminUrl": "https://beta.seems.legal",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://beta.seems.legal/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "role_list",
        "profile",
        "email"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "047f58b0-308a-4730-8b9b-5c8546ea1f83",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6f9709aa-6a45-4853-82b9-02d8761ba3e3",
      "clientId": "gamma.seems.legal",
      "name": "gamma.seems.legal",
      "description": "gamma.seems.legal",
      "rootUrl": "https://gamma.seems.legal",
      "adminUrl": "https://gamma.seems.legal/oauth2/callback/saml",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://gamma.seems.legal/oauth2/callback/saml"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.assertion.signature": "true",
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "keycloak",
        "saml.server.signature": "true",
        "saml_idp_initiated_sso_url_name": "gamma.seems.legal",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.signing.certificate": "MIICuTCCAaECBgFzp2cJfzANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDDBVzb25hcnF1YmUuc2VlbXMubGVnYWwwHhcNMjAwODAxMDAyMTU0WhcNMzAwODAxMDAyMzM0WjAgMR4wHAYDVQQDDBVzb25hcnF1YmUuc2VlbXMubGVnYWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCDA9YyMPLGCQGk+xOK1osQDwJ9kkIexchIHNAn5NTzkRE6mAJffW2fPs+mqw5qgL1kE3mlkIkUUv6+XB+gwuuwTnKlmix5DJ1ztcloEcqVfwIi3opJcUyjIxfJ8udd3OXUCipdkVItWrucCsEvdGSECXjPPtbVOCXUR8xVmAIyZ67HRyU3BsSWQYmWKUYafX1EaQKKoBz7uUPqOPuxvVJPBtIdnzzg7Q6UjPveK4iUYnUdbPD+rJpdAhKIaC3je8W9EuG5883zHXL+O/SwZUyOX9B6WXYozuBLXruB9xcVNGXBWO5izDuNJCFCvpL3IJXDyoH4mybeNd89/CtWp8K5AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAC/0dWNDJ2Kv/gsoHDk0sr0EZLub+rwK4uFFfPVwNh1mwHWSi/6GP+qZ9b/j+20K2rQA4HE4Zpoigylrx5iIVwJL9k8Z4Q4IbzOUeIcywIDWWpEPg7tNyo4NXmGQCaXsF5Z7PhPdGDOq0T3FRiIB8hYZmXRWusOrhwU25Ojh1jGl825PYoURN1V6G1wK5D7l6G0aF6V1dhmP69KhyLj+7NIPXV0LxCE9emLyEtzmIA4Bo0cQA5rMRtAinat/MPXWMHAq6edgj4ufnejso/A+X2dXT4h6W50bsMF8N+1VstXMsh0v4u4FiEf3U9FcvcJyACxJrF7VkN+tLuorPACNMT0=",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "true",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml.signing.private.key": "MIIEowIBAAKCAQEAgwPWMjDyxgkBpPsTitaLEA8CfZJCHsXISBzQJ+TU85EROpgCX31tnz7PpqsOaoC9ZBN5pZCJFFL+vlwfoMLrsE5ypZoseQydc7XJaBHKlX8CIt6KSXFMoyMXyfLnXdzl1AoqXZFSLVq7nArBL3RkhAl4zz7W1Tgl1EfMVZgCMmeux0clNwbElkGJlilGGn19RGkCiqAc+7lD6jj7sb1STwbSHZ884O0OlIz73iuIlGJ1HWzw/qyaXQISiGgt43vFvRLhufPN8x1y/jv0sGVMjl/Qell2KM7gS167gfcXFTRlwVjuYsw7jSQhQr6S9yCVw8qB+Jsm3jXfPfwrVqfCuQIDAQABAoIBACSoUSlP+s2gPX6M5cXmC5jdqkO6RZfYnRZYQYG4DEFuKJTtbVSMgryY1X77w5fXF6bFsDa7/y7Znf9jRVI0179H49okDid8eR2kEot01usHU3CwNZ8g/WFz8zcFKOlhYkj24y20+HpKNc4OUElX1rv+7neGTJPyFtuTjz+vvYWeiFRPihJjPArSTaekS7cBNVJH2PHaJUY/SGhmYLSI0amt74Ey3Q+2hjB3WIoiKHCFeYkkq5pUYLadyRVX9TOTSRhP9BVFuTzduOuZ1sR64nZo84H+oLNF0IyhLMGrzSVUFIoQvf/fQwEVfcKfqkXZWaNKNNvNgDH8F6hyIQu8S/UCgYEAxE6v69Inj9KjPl+gO4V9MvOCSPzmdrSNsuwCz0vB333qy+yex8xSrg3nlML4JY/Htq44nRhzbt05i80lUC6+H3zWdEh5ShkP2j9slMrYazHRA5ADKNKufHGIJM3SV21lXP7CIbKF7ZRqg/Ji+ztHRB3wNp+4ZhckFnrTjqGHjb8CgYEAqtqKtb6Jwn5sbteEvIXTpyYYT4LgWOM3etPfEfxVTDjbrRPVGvSG3HTd0YXoXf8eekTYJdetJ/BwuxGi6Laz1uyN13VyNxY5k4iPw4tzroo7XyDIUxb14brLDTgta7+/mGpIZQG7hYRXLcPguYoudZaNxdp+Q04Czymwp1j6vYcCgYBkoR2HGlyTWlu6LpTZzi0GwFMKDTIqqZV1oYwzLVd9tHN3A53FN9UuSgxrcqJ3xsOOvrJgvVb2/spwAsJc3wkw5PKd+0TJmh1JOHf1siHMmWXWmK018QHm4t/yVdu8W2S5jhJ/6Z7D0e/kIY1h0dpPbbVkmu2Qz839BAuMsvrkywKBgE1BWKtppt0dUWalaU3draDNJvz9DvjidTnDCAEX+nHm295dM2Vm4HxbE9okFLg8Hcnny10BMzj2DeNozCMySguLF3AvmR+zmwFNJMSlEAACXWpcZni7zx7s2df2aQNpxvbiSC30JJjxCIKXKcx74Romo6CtdZ51bevCzDA/mdGNAoGBAJ/dS54fOR4dC0bYlvJRK8/MCVGDXwWixtmBvedM3wXL3VcH/hzCwhNMKJ6k1kKPs41GsKkLD370FXVGejiuWfq/XIp+4uenuf0IXiKxra4vyjS2RDiFumjjkxorSSY0zgFBGRnkkWy+6VGGTIysIagPCzb+fHXo2bxDgkQQPlKv",
        "saml_name_id_format": "persistent",
        "saml.onetimeuse.condition": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "d338b1e4-454e-468b-ac8d-373c0ee418cb",
          "name": "groups",
          "protocol": "saml",
          "protocolMapper": "saml-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "single": "true",
            "attribute.nameformat": "Basic",
            "full.path": "false",
            "friendly.name": "groups",
            "attribute.name": "groups"
          }
        },
        {
          "id": "7c1fd9d0-5521-418f-a3a1-cb396316a55c",
          "name": "role",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "true",
            "attribute.nameformat": "Basic",
            "friendly.name": "Role",
            "attribute.name": "Role"
          }
        },
        {
          "id": "d9143f60-4f6c-48da-9db1-959166db1f4d",
          "name": "email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "Email",
            "friendly.name": "Email",
            "attribute.name": "email"
          }
        },
        {
          "id": "65cb8ac5-f529-4fc1-a625-ca10958f131e",
          "name": "name",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "Username",
            "friendly.name": "Username",
            "attribute.name": "name"
          }
        },
        {
          "id": "9bc2ad53-68d6-436a-89a9-0778e2b3478d",
          "name": "login",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "Username",
            "friendly.name": "Username",
            "attribute.name": "login"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "48b4f0c2-b294-496d-8508-27c00a278335",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a60c2078-5889-4f50-92ba-33d9f41551db",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/linuxpolska/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/admin/linuxpolska/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "00b1d4ab-fac9-4b40-a9d5-297df5caf364",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "a3e9cca2-e947-4801-95ca-a75c50aa0978",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "bceff515-14e0-4354-99aa-85afb1a4cdfe",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "dd26826a-485a-4f01-b046-12b9b4e1022c",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "616e08c8-5d38-42f9-878c-2fa3d1168c1f",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "9469b082-bfae-4ee6-8101-b07a0bcb871c",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "66368e1c-2c1d-48e9-aae7-dccbd398290f",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "6f0cf246-9015-4657-a295-39579e99d653",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "02ae4cad-b385-43aa-aad5-d94eae3666b3",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "1f1c3a78-bf71-4a46-9024-fc1cc728bda1",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "2a9c5098-46a6-4226-97f4-282b329169dd",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "477ce507-a819-4e79-827e-097fc1937f6b",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "c3b16e45-86ec-40a5-8eb8-3da8ffa36fc3",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "9edea766-8149-40df-9442-cc40e9af9db9",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a4131f9c-3f1b-4d7e-9469-33fe73c35aad",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ae574483-d33a-422d-8c9e-6cafa824359f",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "93ae5392-d8f2-40f3-9a38-6a507bcffa3e",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "76e42726-5bda-45e0-bc57-1185694172a7",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3d5d1d20-a611-470d-b362-3639d7c5cf4c",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "119b1c06-368f-42e4-8fb0-1101a1a76b18",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4331789b-b01c-469f-b0e5-fd7b0ecadde6",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7fa49e0d-228d-4464-a69e-e2198975f3d2",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9c6a0b31-2fd9-434b-a6a3-faee8f6bc2f4",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0df0472a-d9f4-48e3-b802-869e91050cfe",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "99988622-ed49-4fbc-90e1-29d20fbbded5",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "82143d10-7c7f-4386-bd32-f22288dd9817",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "167d3408-f0b0-454c-a810-32d4af03da68",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cf360518-cd6e-4277-b05d-01b59c5bcca4",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "78861e90-3702-4d8b-af4b-58bf232878ee",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "c47cc315-a7f4-4299-80d1-a9de53fbcf9a",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "9871bf02-c354-491c-a116-cb95e62a8edc",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "285f6aba-2f6d-4dde-a14a-00c44698c752",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "7d98cbd1-970b-4497-9718-1dad3e73cf59",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "4a7bb993-8b33-4d9e-9569-a9273ad7efcf",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "ac9f7d42-7f08-4dde-a874-db4f30ad1781",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "b3be2295-ce8b-4ec1-b652-1f7aed622a9a",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "roles",
    "profile",
    "web-origins",
    "email"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "phone",
    "microprofile-jwt",
    "address"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "6ab2e83e-a407-4c47-a7de-40dc89bbc98a",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "e80d262e-f3df-4940-82a3-590011bd57c7",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "43cd7b6c-e61d-4857-8b7a-147524627ce6",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "b200b0d7-e1e8-4ad3-bdac-dfad5d70269e",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "cbafa03a-f6a7-43ff-b94a-dc5a59fae875",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "4729d467-03ce-4846-a68d-cb81fbbe9e43",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "37e99a31-5450-4f14-aa81-88133c4b93d8",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "b830e2d0-9f37-48a1-a9d3-4887206877cf",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "3e776adb-6bb3-41b2-9062-835c3364c66f",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "31a394cb-11e3-452c-8eda-8cd7fa443859",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "a30275ac-daac-4fac-ac4d-eba12cd8c4af",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "97f174c2-95a5-4df3-a9ea-1b3448579288",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "772e0226-fbe5-4264-b919-2eba167e0d84",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "f269c5ca-32d3-41cd-9f88-75ff9d01486f",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "e80bd4fe-425f-4746-aeb3-7c231efdec73",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "5ec1d526-6e95-404c-948b-710b1b373e8c",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "d0e7855f-e313-4986-8d71-5c2511cb72bc",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "271eaf24-3f55-4a81-96bf-6684a4286338",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "7e641823-7951-460a-b69b-9088bba6a0db",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "82d3f26d-a0a3-4ae7-a092-15a5e7b8904a",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "48c8ed1e-e08a-4554-a65a-8be06018e641",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "1cf2131b-19f6-4a2f-ae66-4c7987797052",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "3d2ccb1c-f544-4b4c-bc04-da9e3b2be5d1",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "b1775271-34e8-48f8-aac7-a36943dd9e1d",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "c9da34c4-462f-436a-8ec2-cf0783cca7fe",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "3c789229-24d6-4ea6-acad-cae0bfa67b37",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "587df3d5-aabe-44f2-b1c0-c536cfaaede3",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "f706706f-8a0d-40a9-bd15-bfa4eec7a259",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "580fbc7a-bc47-42dc-b86e-f1427166c773",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "fba69c6c-22fc-4f86-8f2c-70651038a5ac",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "f4ef6eaf-3029-48a2-899a-dc6658fb3f24",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "f81ccdf5-81eb-4b5a-af1c-3724d1982dc5",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "d58e537c-1d23-4061-8fb2-0543b52c1452",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0"
  },
  "keycloakVersion": "11.0.0",
  "userManagedAccessAllowed": false
}